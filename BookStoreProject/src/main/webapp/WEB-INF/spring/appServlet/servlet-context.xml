<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<context:component-scan base-package="com.springcompany.prz" />
	

	<!-- 파일 업로드 설정 -->
	<!-- Spring에서 제공해주는 multipart 처리가 가능한 참조 자료 경로 -->
	<beans:bean id = "multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 첨부 되는 파일의 최대 10MB 까지 가능하게 제한 설정 -->
		<beans:property name="maxUploadSize" value="100000" />
	</beans:bean>
	<!-- 예외처리 방법 1 : @ExceptionHandler 기반의 예외처리 방법
	<mvc:annotation-driven></mvc:annotation-driven>  -->
	
	<!-- 예외처리 방법 2 : xml 기반의 예외처리 방법-->
	<beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="java.lang.IllegalArgumentException">
					common/arithmeticError
				</beans:prop>
				<beans:prop key="java.lang.NullPointerException">
					common/nullPointerError
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

</beans:beans>
































